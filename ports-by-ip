#!/bin/bash
# ports-by-ip - show destination ports permitted for a particular IP.
# 
# Read a junos config file in "display set" format and output a list
# of policies that affect a given IP address based on source & destination zone.
# For now, the IP is assumed the destination. We'll probably add a
# source option eventually.

IAM=$(basename $0)

# Global settings.

# Defaults, to be overridden by getopts below
JUNOS_DEFAULTS=junos-defaults-set.cfg
FILE=current
MASK=16
FROM_ZONE="[^ ]+"
TO_ZONE="[^ ]+"


usage ()
{
	echo -e "usage: ${IAM} [ -h ] -f from -t to ( -d destination ) config"
	echo -e ""
	echo -e "  -h\t: display this help"
	echo -e "  -f\t: match policies affecting flows from this zone (from-zone)"
	echo -e "  -t\t: match policies affecting flows to this zone (to-zone)"
	echo -e "  -d\t: match this destination IP (destination-address)"
	#echo -e "  -s\t: match this source IP (source-address)" #future 
	echo -e ""
	echo -e "  IP addresses must be specified in dotted-quad format with and optional netmask"
	echo -e "  e.g. 127.0.0.1 or 127.0.0.1/24"
	echo -e "  If not specified, the netmask defaults to $MASK."
}

if [ -f "$1" ]; then
	FILE=$1
fi

FILE="${FILE} ${JUNOS_DEFAULTS}"

while read ip policies; do
	echo -en "$ip\t"
	if [[ "${ip}" =~ ":" ]]; then 
		FROM_ZONE=$(echo ${ip} | awk -F '[:()]' '{print $2}')
		TO_ZONE=$(echo ${ip} | awk -F '[:()]' '{print $3}')
		ZONE_FILTER="from-zone ${FROM_ZONE} to-zone ${TO_ZONE}"
		ip=$(echo ${ip} | awk -F '[:()]' '{print $1}')
	fi
	# any
	app0=$( for p in $policies; do egrep "set security.*${ZONE_FILTER}.*policy $p match application any" ${FILE} \
		| egrep -o ' any$'
	done)
	# application
	app1=$(for p in $policies; do egrep "set security.*${ZONE_FILTER}.*policy $p match application" ${FILE} \
		| awk '{print "applications.*application " $12 ".*destination-port"}' \
		| egrep -f - ${FILE} | egrep -o '[0-9-]+$'
	done)
	# application-set
	app2=$(for p in $policies; do egrep "set security.*${ZONE_FILTER}.*policy $p match application" ${FILE} \
		| awk '{print "applications.*application-set " $12 }' \
		| egrep -f - ${FILE} | awk '{print "applications.*application " $6 ".*destination-port"}' \
		| egrep -f - ${FILE} | egrep -o '[0-9-]+$'
	done)
done

for port in $app0 $app1 $app2; do
	if [[ "${port}" == "any" ]]; then
		for i in {1..65535}; do 
			echo $i;
		done
		break	# obviously all ports, so no need calc the rest.	
	elif [[ "${port}" =~ \- ]]; then
		A=$(echo $port | cut -d- -f1)
		B=$(echo $port | cut -d- -f2)
		for i in $(eval echo "{$A..$B}"); do
			echo $i;
		done
	else
		echo $port
	fi
done | sort -n |uniq | tr '\n' ' '
echo

